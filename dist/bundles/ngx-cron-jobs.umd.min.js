!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common"),require("@angular/forms"),require("rxjs/Subject"),require("rxjs/add/operator/takeUntil"),require("rxjs/add/operator/map"),require("rxjs/add/operator/publishReplay"),require("rxjs/add/operator/filter"),require("rxjs/add/operator/do")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@angular/common","@angular/forms","rxjs/Subject","rxjs/add/operator/takeUntil","rxjs/add/operator/map","rxjs/add/operator/publishReplay","rxjs/add/operator/filter","rxjs/add/operator/do"],t):t(e["ngx-cron-jobs"]={},e.ng.core,e.ng.common,e.ng.forms,e.Rx)}(this,function(e,t,n,a,s){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){e(t,n);function a(){this.constructor=t}t.prototype=null===n?Object.create(n):(a.prototype=n.prototype,new a)}}(),l=function(){function e(){this.defaultConfig={quartz:!1,bootstrap:!0,multiple:!1},this.defaultValidateConfig={validate:!1},this.daysOfWeekPosix=[{value:0,label:"Sunday"},{value:1,label:"Monday"},{value:2,label:"Tuesday"},{value:3,label:"Wednesday"},{value:4,label:"Thursday"},{value:5,label:"Friday"},{value:6,label:"Saturday"}],this.daysOfWeekQuartz=[{value:1,label:"Sunday"},{value:2,label:"Monday"},{value:3,label:"Tuesday"},{value:4,label:"Wednesday"},{value:5,label:"Thursday"},{value:6,label:"Friday"},{value:7,label:"Saturday"}],this.numeral=[{value:1,label:"1st"},{value:2,label:"2nd"},{value:3,label:"3rd"},{value:4,label:"4th"},{value:5,label:"5th"},{value:6,label:"6th"},{value:7,label:"7th"},{value:8,label:"8th"},{value:9,label:"9th"},{value:10,label:"10th"},{value:11,label:"11th"},{value:12,label:"12th"},{value:13,label:"13th"},{value:14,label:"14th"},{value:15,label:"15th"},{value:16,label:"16th"},{value:17,label:"17th"},{value:18,label:"18th"},{value:19,label:"19th"},{value:20,label:"20th"},{value:21,label:"21st"},{value:22,label:"22nd"},{value:23,label:"23rd"},{value:24,label:"24th"},{value:25,label:"25th"},{value:26,label:"26th"},{value:27,label:"27th"},{value:28,label:"28th"},{value:29,label:"29th"},{value:30,label:"30th"},{value:31,label:"31st"}],this._months=[{value:1,label:"January"},{value:2,label:"February"},{value:3,label:"March"},{value:4,label:"April"},{value:5,label:"May"},{value:6,label:"June"},{value:7,label:"July"},{value:8,label:"August"},{value:9,label:"September"},{value:10,label:"October"},{value:11,label:"November"},{value:12,label:"December"}],this._baseFrequency=[{value:0,label:"Please select"},{value:1,label:"Minute"},{value:2,label:"Hour"},{value:3,label:"Day"},{value:4,label:"Week"},{value:5,label:"Month"},{value:6,label:"Year"}],this._hours=[];for(var e=0;e<24;e++)this._hours.push({value:e,label:""+e});this._minutes=[];for(e=0;e<60;e+=5)this._minutes.push({value:e,label:""+e})}return Object.defineProperty(e.prototype,"baseFrequency",{get:function(){return this._baseFrequency.slice()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"daysOfMonth",{get:function(){return this.numeral.slice()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"months",{get:function(){return this._months.slice()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"hours",{get:function(){return this._hours.slice()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"minutes",{get:function(){return this._minutes.slice()},enumerable:!0,configurable:!0}),e.prototype.getConfig=function(e){return void 0===e&&(e={}),Object.assign({},this.defaultConfig,e)},e.prototype.getValidate=function(e){return void 0===e&&(e={}),Object.assign({},this.defaultValidateConfig,e)},e.prototype.getDaysOfWeek=function(e){return void 0===e&&(e=!1),e?this.daysOfWeekQuartz.slice():this.daysOfWeekPosix.slice()},e}();l.decorators=[{type:t.Injectable}],l.ctorParameters=function(){return[]};var i=function(){function e(e){var t=this;this.dataService=e,this.frequencyData=this.dataService.baseFrequency;var n={};["none","minute","hour","day","week","month","year"].forEach(function(e,a){n[e]=t.frequencyData[a].value}),this.baseFrequency=n}return e.prototype.getDefaultFrequency=function(){return{baseFrequency:this.frequencyData[0].value,minutes:[],hours:[],daysOfMonth:[],daysOfWeek:[],months:[]}},e.prototype.getDefaultFrequenceWithDefault=function(){var e=this.getDefaultFrequency();return e.daysOfWeek=this.getDaysOfWeek()[0]?[this.getDaysOfWeek()[0].value]:[],e.daysOfMonth=this.dataService.daysOfMonth[0]?[this.dataService.daysOfMonth[0].value]:[],e.months=this.dataService.months[0]?[this.dataService.months[0].value]:[],e.hours=this.dataService.hours[0]?[this.dataService.hours[0].value]:[],e.minutes=this.dataService.minutes[0]?[this.dataService.minutes[0].value]:[],e},e.prototype.getDaysOfWeek=function(){return this.dataService.getDaysOfWeek(!1)},e.prototype.fromCronWithDefault=function(e){var t=e.trim().replace(/\s+/g," ").split(" "),n=this.getDefaultFrequenceWithDefault();return this.fromCronInternal(t,n)},e.prototype.fromCron=function(e){var t=e.trim().replace(/\s+/g," ").split(" "),n=this.getDefaultFrequency();return this.fromCronInternal(t,n)},e.prototype.fromCronInternal=function(e,t){return 5!==e.length?t:("*"===e[0]&&"*"===e[1]&&"*"===e[2]&&"*"===e[3]&&"*"===e[4]?t.baseFrequency=this.baseFrequency.minute:"*"===e[1]&&"*"===e[2]&&"*"===e[3]&&"*"===e[4]?t.baseFrequency=this.baseFrequency.hour:"*"===e[2]&&"*"===e[3]&&"*"===e[4]?t.baseFrequency=this.baseFrequency.day:"*"===e[2]&&"*"===e[3]?t.baseFrequency=this.baseFrequency.week:"*"===e[3]&&"*"===e[4]?t.baseFrequency=this.baseFrequency.month:"*"===e[4]&&(t.baseFrequency=this.baseFrequency.year),"*"!==e[0]&&(t.minutes=this.getValueArray(e[0])),"*"!==e[1]&&(t.hours=this.getValueArray(e[1])),"*"!==e[2]&&(t.daysOfMonth=this.getValueArray(e[2])),"*"!==e[3]&&(t.months=this.getValueArray(e[3])),"*"!==e[4]&&(t.daysOfWeek=this.getValueArray(e[4])),t)},e.prototype.setCron=function(e){var t=["*","*","*","*","*"];return e&&e.baseFrequency?(e.baseFrequency>=this.baseFrequency.hour&&(t[0]=e.minutes.length>0?e.minutes.join(","):"*"),e.baseFrequency>=this.baseFrequency.day&&(t[1]=e.hours.length>0?e.hours.join(","):"*"),e.baseFrequency===this.baseFrequency.week&&(t[4]=e.daysOfWeek.length>0?e.daysOfWeek.join(","):"*"),e.baseFrequency>=this.baseFrequency.month&&(t[2]=e.daysOfMonth.length>0?e.daysOfMonth.join(","):"*"),e.baseFrequency===this.baseFrequency.year&&(t[3]=e.months.length>0?e.months.join(","):"*"),t.join(" ")):""},e.prototype.getValueArray=function(e){return e?e.split(",").map(function(e){return+e}):[]},e}();i.decorators=[{type:t.Injectable}],i.ctorParameters=function(){return[{type:l}]};var o=function(e){r(t,e);function t(t){var n=e.call(this,t)||this;return n.dataService=t,n}return t.prototype.getDaysOfWeek=function(){return this.dataService.getDaysOfWeek(!0)},t.prototype.fromCronWithDefault=function(e){var t=e.trim().replace(/\s+/g," ").split(" "),n=this.getDefaultFrequenceWithDefault();return this.fromCronQuartzInternal(t,n)},t.prototype.fromCron=function(e){var t=e.trim().replace(/\s+/g," ").split(" "),n=this.getDefaultFrequency();return this.fromCronQuartzInternal(t,n)},t.prototype.fromCronQuartzInternal=function(e,t){return 6!==e.length&&7!==e.length?t:("*"===e[1]&&"*"===e[2]&&"*"===e[3]&&"*"===e[4]&&"?"===e[5]?t.baseFrequency=this.baseFrequency.minute:"*"===e[2]&&"*"===e[3]&&"*"===e[4]&&"?"===e[5]?t.baseFrequency=this.baseFrequency.hour:"*"===e[3]&&"*"===e[4]&&"?"===e[5]?t.baseFrequency=this.baseFrequency.day:"?"===e[3]&&"*"===e[4]?t.baseFrequency=this.baseFrequency.week:"*"===e[4]&&"?"===e[5]?t.baseFrequency=this.baseFrequency.month:"?"===e[5]&&(t.baseFrequency=this.baseFrequency.year),"*"!==e[1]&&(t.minutes=this.getValueArray(e[1])),"*"!==e[2]&&(t.hours=this.getValueArray(e[2])),"*"!==e[3]&&"?"!==e[3]&&(t.daysOfMonth=this.getValueArray(e[3])),"*"!==e[4]&&(t.months=this.getValueArray(e[4])),"*"!==e[5]&&"?"!==e[5]&&(t.daysOfWeek=this.getValueArray(e[5])),t)},t.prototype.setCron=function(e){var t=["0","*","*","*","*","?"];return e&&e.baseFrequency?(e.baseFrequency>=this.baseFrequency.hour&&(t[1]=e.minutes.length>0?e.minutes.join(","):"*"),e.baseFrequency>=this.baseFrequency.day&&(t[2]=e.hours.length>0?e.hours.join(","):"*"),e.baseFrequency===this.baseFrequency.week&&(t[3]="?",t[5]=e.daysOfWeek.length>0?e.daysOfWeek.join(","):"*"),e.baseFrequency>=this.baseFrequency.month&&(t[3]=e.daysOfMonth.length>0?e.daysOfMonth.join(","):"*"),e.baseFrequency===this.baseFrequency.year&&(t[4]=e.months.length>0?e.months.join(","):"*"),t.join(" ")):""},t}(i);o.decorators=[{type:t.Injectable}],o.ctorParameters=function(){return[{type:l}]};var u=function(){function e(e,t,n){this.dataService=e,this.injector=t,this.formBuilder=n,this.isValid=!0,this.isDisabled=!1,this.daysOfWeekData=[],this.daysOfMonthData=[],this.monthsData=[],this.hoursData=[],this.minutesData=[],this.isPatching=!1,this.unSubscribe=new s.Subject,this.cronJobsForm=this.formBuilder.group({baseFrequency:0,daysOfWeek:"",daysOfMonth:"",months:"",hours:"",minutes:""}),this.config=this.dataService.getConfig(),this.validate=this.dataService.getValidate(),this.setService()}return e.prototype.ngOnInit=function(){var e=this;this.baseFrequency$=this.cronJobsForm.get("baseFrequency").valueChanges.takeUntil(this.unSubscribe).map(function(e){return+e}).publishReplay(1).refCount(),this.cronJobsForm.valueChanges.takeUntil(this.unSubscribe).filter(function(){return!e.isPatching}).map(function(e){return e.baseFrequency=+e.baseFrequency,e}).subscribe(function(t){t.baseFrequency||(t=e.cronService.getDefaultFrequenceWithDefault(),e.cronJobsForm.patchValue(t,{emitEvent:!1})),e.onChange(e.cronService.setCron(t))}),this.baseFrequencyData=this.dataService.baseFrequency,this.daysOfMonthData=this.dataService.daysOfMonth,this.daysOfWeekData=this.dataService.getDaysOfWeek(!1),this.monthsData=this.dataService.months,this.hoursData=this.dataService.hours,this.minutesData=this.dataService.minutes,this.isPatching=!0,setTimeout(function(){e.cronJobsForm.patchValue(e.cronService.getDefaultFrequenceWithDefault()),e.isPatching=!1})},e.prototype.onBlur=function(){this.onTouched()},e.prototype.ngOnChanges=function(e){var t=this;e.config&&(this.config=this.dataService.getConfig(e.config.currentValue),setTimeout(function(){e.config.previousValue&&e.config.previousValue.quartz===e.config.currentValue.quartz||(t.daysOfWeekData=t.dataService.getDaysOfWeek(t.config.quartz),t.cronJobsForm.patchValue({daysOfWeek:t.daysOfWeekData[0].value}))}),this.setService()),e.validate&&(this.validate=this.dataService.getValidate(e.validate.currentValue))},e.prototype.setService=function(){this.config.quartz?this.cronService=this.injector.get(o):this.cronService=this.injector.get(i)},e.prototype.writeValue=function(e){var t=this;this.isPatching=!0;var n;n=e?this.cronService.fromCronWithDefault(e):this.cronService.getDefaultFrequenceWithDefault(),setTimeout(function(){t.cronJobsForm.patchValue(n),t.isPatching=!1})},e.prototype.registerOnChange=function(e){this.onChange=e},e.prototype.registerOnTouched=function(e){this.onTouched=e},e.prototype.setDisabledState=function(e){this.isDisabled=e,this.isDisabled?this.cronJobsForm.disable():this.cronJobsForm.enable()},e.prototype.getIsValid=function(){return!!this.validate.validate&&this.getValid()},e.prototype.getIsInvalid=function(){return!!this.validate.validate&&!this.getValid()},e.prototype.getValid=function(){return this.formControl?this.formControl.valid:this.isValid},e.prototype.ngOnDestroy=function(){this.unSubscribe.next(),this.unSubscribe.complete()},e}();u.decorators=[{type:t.Component,args:[{selector:"cron-jobs",template:'\n    <div class="form-inline" *ngIf="config?.bootstrap" [formGroup]="cronJobsForm">\n      <label class="mr-sm-2" for="selectBase">Every: </label>\n      <select class="form-control" id="selectBase" (blur)="onBlur()"\n              [ngClass]="{\'is-valid\': getIsValid(), \'is-invalid\': getIsInvalid()}"\n              formControlName="baseFrequency">\n        <option *ngFor="let item of baseFrequencyData" [value]="item.value">{{item.label}}</option>\n      </select>\n      <label class="mx-sm-2" *ngIf="(baseFrequency$ | async) === 4">on</label>\n      <select multiple [multiple]="config.multiple" class="form-control" (blur)="onBlur()"\n              [ngClass]="{\'is-valid\': getIsValid(), \'is-invalid\': getIsInvalid()}"\n              *ngIf="(baseFrequency$ | async) === 4" formControlName="daysOfWeek">\n        <option *ngFor="let item of daysOfWeekData" [value]="item.value">{{item.label}}</option>\n      </select>\n      <label class="mx-sm-2" *ngIf="(baseFrequency$ | async) >= 5">on the</label>\n      <select multiple [multiple]="config.multiple" class="form-control" (blur)="onBlur()"\n              [ngClass]="{\'is-valid\': getIsValid(), \'is-invalid\': getIsInvalid()}"\n              *ngIf="(baseFrequency$ | async) >= 5" formControlName="daysOfMonth">\n        <option *ngFor="let item of daysOfMonthData" [value]="item.value">{{item.label}}</option>\n      </select>\n      <label class="mx-sm-2" *ngIf="(baseFrequency$ | async) === 6">of</label>\n      <select multiple [multiple]="config.multiple" class="form-control" (blur)="onBlur()"\n              [ngClass]="{\'is-valid\': getIsValid(), \'is-invalid\': getIsInvalid()}"\n              *ngIf="(baseFrequency$ | async) === 6" formControlName="months">\n        <option *ngFor="let item of monthsData" [ngValue]="item.value">{{item.label}}</option>\n      </select>\n      <label class="mx-sm-2" *ngIf="(baseFrequency$ | async) >= 2">at</label>\n      <select multiple [multiple]="config.multiple" class="form-control" (blur)="onBlur()"\n              [ngClass]="{\'is-valid\': getIsValid(), \'is-invalid\': getIsInvalid()}"\n              *ngIf="(baseFrequency$ | async) >= 3" formControlName="hours">\n        <option *ngFor="let item of hoursData" [value]="item.value">{{item.label}}</option>\n      </select>\n      <label class="mx-sm-2" *ngIf="(baseFrequency$ | async) >= 3 ">:</label>\n      <select multiple [multiple]="config.multiple" class="form-control" (blur)="onBlur()"\n              [ngClass]="{\'is-valid\': getIsValid(), \'is-invalid\': getIsInvalid()}"\n              *ngIf="(baseFrequency$ | async) >=2" formControlName="minutes">\n        <option *ngFor="let item of minutesData" [value]="item.value">{{item.label}}</option>\n      </select>\n      <label class="mx-sm-2" *ngIf="(baseFrequency$ | async) === 2">past the hour</label>\n    </div>\n    <div class="cron-wrap" *ngIf="!config?.bootstrap" [formGroup]="cronJobsForm">\n      <span>Every: </span>\n      <div class="cron-select-wrap">\n        <select class="cron-select" formControlName="baseFrequency" (blur)="onBlur()"\n                [ngClass]="{\'is-valid\': getIsValid(), \'is-invalid\': getIsInvalid()}">\n          <option *ngFor="let item of baseFrequencyData" [value]="item.value">{{item.label}}</option>\n        </select>\n      </div>\n      <div class="select-options">\n        <span  *ngIf="(baseFrequency$ | async) === 4">on </span>\n        <div *ngIf="(baseFrequency$ | async) === 4" class="cron-select-wrap">\n          <select multiple [multiple]="config.multiple" class="cron-select day-of-week-value" (blur)="onBlur()"\n                  [ngClass]="{\'is-valid\': getIsValid(), \'is-invalid\': getIsInvalid()}"\n                  formControlName="daysOfWeek">\n            <option *ngFor="let item of daysOfWeekData" [value]="item.value">{{item.label}}</option>\n          </select>\n        </div>\n        <span *ngIf="(baseFrequency$ | async) >= 5">on the </span>\n        <div *ngIf="(baseFrequency$ | async) >= 5" class="cron-select-wrap">\n          <select multiple [multiple]="config.multiple" class="cron-select day-of-month-value" (blur)="onBlur()"\n                  [ngClass]="{\'is-valid\': getIsValid(), \'is-invalid\': getIsInvalid()}"\n                  formControlName="daysOfMonth">\n            <option *ngFor="let item of daysOfMonthData" [value]="item.value">{{item.label}}</option>\n          </select>\n        </div>\n        <span *ngIf="(baseFrequency$ | async) === 6">of </span>\n        <div *ngIf="(baseFrequency$ | async) === 6" class="cron-select-wrap">\n          <select multiple [multiple]="config.multiple" class="cron-select month-value" (blur)="onBlur()"\n                  [ngClass]="{\'is-valid\': getIsValid(), \'is-invalid\': getIsInvalid()}"\n                  formControlName="months">\n            <option *ngFor="let item of monthsData" [ngValue]="item.value">{{item.label}}</option>\n          </select>\n        </div>\n        <span *ngIf="(baseFrequency$ | async) >= 3 ">at </span>\n        <div *ngIf="(baseFrequency$ | async) >= 3" class="cron-select-wrap">\n          <select multiple [multiple]="config.multiple" class="cron-select hour-value" (blur)="onBlur()"\n                  [ngClass]="{\'is-valid\': getIsValid(), \'is-invalid\': getIsInvalid()}"\n                  formControlName="hours">\n            <option *ngFor="let item of hoursData" [value]="item.value">{{item.label}}</option>\n          </select>\n        </div>\n        <span *ngIf="(baseFrequency$ | async) >= 3"> : </span>\n        <div *ngIf="(baseFrequency$ | async) >=2" class="cron-select-wrap">\n          <select multiple [multiple]="config.multiple" class="cron-select minute-value" (blur)="onBlur()"\n                  [ngClass]="{\'is-valid\': getIsValid(), \'is-invalid\': getIsInvalid()}"\n                  formControlName="minutes">\n            <option *ngFor="let item of minutesData" [value]="item.value">{{item.label}}</option>\n          </select>\n        </div>\n        <span *ngIf="(baseFrequency$ | async) === 2"> past the hour</span>\n      </div>\n    </div>\n  ',styles:["\n    :host {\n      display: block;\n    }\n\n    .cron-select-wrap {\n      display: inline-block;\n    }\n\n    .cron-select-wrap .cron-select {\n      width: 150px;\n      height: 34px;\n      padding: 6px 12px;\n      margin: 0;\n      font-size: 14px;\n      line-height: 1.42857143;\n      color: #555;\n      background: #fff none;\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n      box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n      -webkit-transition: border-color ease-in-out 0.15s, -webkit-box-shadow ease-in-out 0.15s;\n      transition: border-color ease-in-out 0.15s, -webkit-box-shadow ease-in-out 0.15s;\n      transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;\n      transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s, -webkit-box-shadow ease-in-out 0.15s;\n    }\n\n    .cron-select-wrap select[multiple] {\n      height: 140px;\n    }\n\n    .select-options {\n      display: inline-block;\n    }\n  "],providers:[i,o,l,{provide:a.NG_VALUE_ACCESSOR,useExisting:t.forwardRef(function(){return u}),multi:!0}]}]}],u.ctorParameters=function(){return[{type:l},{type:t.Injector},{type:a.FormBuilder}]},u.propDecorators={config:[{type:t.Input}],validate:[{type:t.Input}],isValid:[{type:t.Input}],formControl:[{type:t.Input}]};var c=function(){return function(){}}();c.decorators=[{type:t.NgModule,args:[{imports:[n.CommonModule,a.FormsModule,a.ReactiveFormsModule],declarations:[u],exports:[u],providers:[l,i,o]}]}],c.ctorParameters=function(){return[]},e.CronJobsModule=c,e.ɵa=u,e.ɵc=l,e.ɵb=i,e.ɵd=o,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-cron-jobs.umd.min.js.map
